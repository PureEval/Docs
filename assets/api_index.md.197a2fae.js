import{f as y,g as w,h as b,o as r,c as n,a,i as I,v as C,j as m,F as x,k as p,u as f,t as l,p as M,l as S,_ as A,b as P}from"./app.845eadea.js";const W=JSON.parse('[{"text":"Global API","anchor":"global-api","items":[{"text":"⭐Currying","link":"/api/currying","headers":[{"text":"curry()","anchor":"curry"},{"text":"uncurry()","anchor":"uncurry"}]},{"text":"⭐Transform","link":"/api/transform","headers":[{"text":"compose()","anchor":"compose"},{"text":"pipe()","anchor":"pipe"},{"text":"call()","anchor":"call"}]},{"text":"Logic","link":"/api/logic","headers":[{"text":"either()","anchor":"either"},{"text":"both()","anchor":"both"},{"text":"gt()","anchor":"gt"},{"text":"gte()","anchor":"gte"},{"text":"lt()","anchor":"lt"},{"text":"lte()","anchor":"lte"},{"text":"equal()","anchor":"equal"},{"text":"when()","anchor":"when"},{"text":"when_v()","anchor":"when_v"},{"text":"unless()","anchor":"unless"},{"text":"unless_v()","anchor":"unless_v"},{"text":"ifElse()","anchor":"ifElse"},{"text":"ifElse_v()","anchor":"ifElse_v"},{"text":"common()","anchor":"common"},{"text":"always()","anchor":"always"}]},{"text":"String","link":"/api/string","headers":[{"text":"rexMatch()","anchor":"rexMatch"},{"text":"rexReplace()","anchor":"rexReplace"},{"text":"rexText()","anchor":"rexTest"},{"text":"split()","anchor":"split"},{"text":"toLower()","anchor":"toLower"},{"text":"toUpper()","anchor":"toUpper"},{"text":"trim()","anchor":"trim"},{"text":"words()","anchor":"words"}]},{"text":"⭐StateMachine","link":"/api/stateMachine","headers":[{"text":"higherPipe()","anchor":"higherPipe"},{"text":"higherCompose()","anchor":"higherCompose"},{"text":"coalgebra()","anchor":"coalgebra"},{"text":"stateMachine()","anchor":"stateMachine"}]},{"text":"Math","link":"/api/mathematics","headers":[{"text":"odd()","anchor":"odd"},{"text":"even()","anchor":"even"},{"text":"add()","anchor":"add"},{"text":"minus()","anchor":"minus"},{"text":"mul()","anchor":"mul"},{"text":"div()","anchor":"div"},{"text":"mod()","anchor":"mod"},{"text":"rema()","anchor":"rema"},{"text":"power()","anchor":"power"},{"text":"negate()","anchor":"negate"},{"text":"upper()","anchor":"upper"},{"text":"under()","anchor":"under"},{"text":"sort()","anchor":"sort"},{"text":"median()","anchor":"median"},{"text":"sum()","anchor":"sum"},{"text":"average()","anchor":"average"},{"text":"prod()","anchor":"prod"},{"text":"max()","anchor":"max"},{"text":"min()","anchor":"min"}]},{"text":"Range","link":"/api/range","headers":[{"text":"range()","anchor":"range"}]},{"text":"⭐Bind","link":"/api/bind","headers":[{"text":"_","anchor":"_"},{"text":"bind()","anchor":"bind"}]},{"text":"⭐Match","link":"/api/match","headers":[{"text":"match()","anchor":"match"}]},{"text":"List","link":"/api/list","headers":[{"text":"zipWith()","anchor":"zipWith"},{"text":"zip()","anchor":"zip"},{"text":"join()","anchor":"join"},{"text":"slice()","anchor":"slice"},{"text":"take()","anchor":"take"},{"text":"takeWhile()","anchor":"takeWhile"},{"text":"drop()","anchor":"drop"},{"text":"dropWhile()","anchor":"dropWhile"},{"text":"allCheck()","anchor":"allCheck"},{"text":"anyCheck()","anchor":"anyCheck"},{"text":"concat()","anchor":"concat"},{"text":"head()","anchor":"head"},{"text":"tail()","anchor":"tail"},{"text":"dropHead()","anchor":"dropHead"},{"text":"dropTail()","anchor":"dropTail"},{"text":"reverse()","anchor":"reverse"}]}]}]'),g=h=>(M("data-v-ffef465d"),h=h(),S(),h),E={id:"api-index"},L={class:"header"},N=g(()=>a("h1",null,"API Reference",-1)),R={class:"api-filter"},T=g(()=>a("label",{for:"api-filter"},"Filter",-1)),z=["id"],j={class:"api-groups"},q=["href"],B={key:1,class:"no-match"},U=y({__name:"ApiIndex",setup(h){const s=w(""),d=i=>i.toLowerCase().replace(/-/g," "),u=b(()=>{const i=d(s.value),o=e=>d(e).includes(i);return W.map(e=>{if(o(e.text))return e;const c=e.items.map(t=>{if(o(t.text)||i.includes("ssr")&&t.text.startsWith("Server"))return t;const _=t.headers.filter(({text:v,anchor:k})=>o(v)||o(k));return _.length?{text:t.text,link:t.link,headers:_}:null}).filter(t=>t);return c.length?{text:e.text,items:c}:null}).filter(e=>e)});return(i,o)=>(r(),n("div",E,[a("div",L,[N,a("div",R,[T,I(a("input",{type:"search",placeholder:"Enter keyword",id:"api-filter","onUpdate:modelValue":o[0]||(o[0]=e=>s.value=e)},null,512),[[C,s.value]])])]),m("",!0),(r(!0),n(x,null,p(f(u),e=>(r(),n("div",{key:e.text,class:"api-section"},[a("h2",{id:e.anchor},l(e.text),9,z),a("div",j,[(r(!0),n(x,null,p(e.items,c=>(r(),n("div",{key:c.text,class:"api-group"},[a("h3",null,l(c.text),1),a("ul",null,[(r(!0),n(x,null,p(c.headers,t=>(r(),n("li",{key:t.anchor},[a("a",{href:c.link+".html#"+t.anchor},l(t.text),9,q)]))),128))])]))),128))])]))),128)),f(u).length?m("",!0):(r(),n("div",B,' No API matching "'+l(s.value)+'" found. ',1))]))}});const V=A(U,[["__scopeId","data-v-ffef465d"]]),H=JSON.parse('{"title":"API Reference","description":"","frontmatter":{"title":"API Reference","layout":"page"},"headers":[],"relativePath":"api/index.md","lastUpdated":1671974123000}'),D={name:"api/index.md"},O=Object.assign(D,{setup(h){return(s,d)=>(r(),n("div",null,[P(V)]))}});export{H as __pageData,O as default};
