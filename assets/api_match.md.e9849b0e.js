import{_ as s,o as a,c as n,S as l}from"./chunks/framework.c1e4fd08.js";const i=JSON.parse('{"title":"Match","description":"","frontmatter":{},"headers":[],"relativePath":"api/match.md","filePath":"api/match.md","lastUpdated":1693059050000}'),t={name:"api/match.md"},p=l(`<h1 id="match-api" tabindex="-1">Match <a class="header-anchor" href="#match-api" aria-label="Permalink to &quot;Match {#match-api}&quot;">​</a></h1><h2 id="match" tabindex="-1">match() <a class="header-anchor" href="#match" aria-label="Permalink to &quot;match() {#match}&quot;">​</a></h2><p>进行模式匹配。</p><ul><li><strong>Details</strong></li></ul><p>传入若干组数组一一对应每条规则，每个数组中有两个元素，这里记为 checker 与 executer。</p><p>match 将会返回一个函数，该函数接收一定数量的参数，并根据每条规则按顺序匹配第一个符合条件的 checker，执行对应的 executer 并返回结果。</p><p>对于每个 checker 的详细检测规则如下：</p><table><thead><tr><th style="text-align:center;">checker 类型</th><th style="text-align:center;">模式匹配参数个数<sup>[2]</sup></th><th style="text-align:center;">匹配规则</th></tr></thead><tbody><tr><td style="text-align:center;">基本量字面值(number/string/object/array<sup>[1]</sup>/<a href="/api/maybe.html#maybe">maybe</a>)</td><td style="text-align:center;">1</td><td style="text-align:center;">将会比较参数与字面值是否相等<sup>[3]</sup>来判断是否匹配成功</td></tr><tr><td style="text-align:center;">function(sync)</td><td style="text-align:center;">任意</td><td style="text-align:center;">将匹配值全部传给该函数，根据函数返回的 true/false 信息判断是否匹配成功</td></tr><tr><td style="text-align:center;">array</td><td style="text-align:center;">Array 长度</td><td style="text-align:center;">Array 中可包含前两种匹配方式，将会对每个值采取单独的匹配方式，若都匹配成功则认为匹配成功</td></tr><tr><td style="text-align:center;"><a href="/api/placeholder.html#otherwise">otherwise</a></td><td style="text-align:center;">任意</td><td style="text-align:center;">采用该方式的匹配总是成功的，用于处理分类为“其他”的情况</td></tr></tbody></table><p>对于每个 executer 的执行规则如下：</p><table><thead><tr><th style="text-align:center;">executer 类型</th><th style="text-align:center;">执行规则</th><th style="text-align:center;">备注</th></tr></thead><tbody><tr><td style="text-align:center;">字面值</td><td style="text-align:center;">匹配成功后将直接返回该字面值</td><td style="text-align:center;">/</td></tr><tr><td style="text-align:center;">function</td><td style="text-align:center;">将匹配值全部传给该函数，并返回该函数的执行结果</td><td style="text-align:center;">虽然该函数没有像 checker 那样标注必须为同步函数，但如果是一个返回 Promise 的函数，我们会原样返回一个 Promise 而不对其进行处理</td></tr></tbody></table><p>备注：</p><p>[1] : 因为 match 的设计依赖于 array 来进行分类，所以当您想编写匹配一个 array 字面量的逻辑时，请为其多套一层数组（可见下文例子）。</p><p>[2] : 此列只作标识作用，实际通过 match 返回的函数的 length 属性的值为 0。</p><p>[3] : match 对于 number/string 的相等规则与 <a href="/api/logic.html#equalstrict">equalStrict</a> 相同；对于 object/array 的相等规则与 <a href="/api/logic.html#deepequal">deepEqual</a> 相同；对于 maybe 的相等规则为 按 <a href="/api/logic.html#equalstrict">equalStrict</a> 规则比对 fold 后的值。</p><ul><li><strong>Example</strong></li></ul><h5 id="example-1" tabindex="-1">Example 1 <a class="header-anchor" href="#example-1" aria-label="Permalink to &quot;Example 1&quot;">​</a></h5><div class="language-js"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#C792EA;">const</span><span style="color:#A6ACCD;"> sort </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">match</span><span style="color:#A6ACCD;">(</span></span>
<span class="line"><span style="color:#A6ACCD;">	[[[]]</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> []]</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#A6ACCD;">	[</span></span>
<span class="line"><span style="color:#A6ACCD;">		_</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#A6ACCD;">		</span><span style="color:#89DDFF;">([</span><span style="color:#A6ACCD;font-style:italic;">x</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">...</span><span style="color:#A6ACCD;font-style:italic;">xs</span><span style="color:#89DDFF;">])</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">=&gt;</span><span style="color:#A6ACCD;"> [</span></span>
<span class="line"><span style="color:#A6ACCD;">			</span><span style="color:#89DDFF;">...</span><span style="color:#82AAFF;">sort</span><span style="color:#A6ACCD;">(</span><span style="color:#82AAFF;">filter</span><span style="color:#A6ACCD;">(</span><span style="color:#82AAFF;">lte</span><span style="color:#A6ACCD;">(x)</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> xs))</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#A6ACCD;">			x</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#A6ACCD;">			</span><span style="color:#89DDFF;">...</span><span style="color:#82AAFF;">sort</span><span style="color:#A6ACCD;">(</span><span style="color:#82AAFF;">filter</span><span style="color:#A6ACCD;">(</span><span style="color:#82AAFF;">gt</span><span style="color:#A6ACCD;">(x)</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> xs))</span></span>
<span class="line"><span style="color:#A6ACCD;">		]</span></span>
<span class="line"><span style="color:#A6ACCD;">	]</span></span>
<span class="line"><span style="color:#A6ACCD;">)</span><span style="color:#89DDFF;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#C792EA;">const</span><span style="color:#A6ACCD;"> fib </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">match</span><span style="color:#A6ACCD;">(</span></span>
<span class="line"><span style="color:#A6ACCD;">    [</span><span style="color:#F78C6C;">1</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">1</span><span style="color:#A6ACCD;">]</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#A6ACCD;">    [</span><span style="color:#F78C6C;">2</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">2</span><span style="color:#A6ACCD;">]</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#A6ACCD;">    [_</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;font-style:italic;">v</span><span style="color:#89DDFF;">)</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">=&gt;</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">fib</span><span style="color:#A6ACCD;">(v </span><span style="color:#89DDFF;">-</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">1</span><span style="color:#A6ACCD;">) </span><span style="color:#89DDFF;">+</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">fib</span><span style="color:#A6ACCD;">(v </span><span style="color:#89DDFF;">-</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">2</span><span style="color:#A6ACCD;">)]</span></span>
<span class="line"><span style="color:#A6ACCD;">)</span><span style="color:#89DDFF;">;</span></span></code></pre></div><h5 id="example-2" tabindex="-1">Example 2 <a class="header-anchor" href="#example-2" aria-label="Permalink to &quot;Example 2&quot;">​</a></h5><div class="language-js"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#676E95;font-style:italic;">// Data Nat = Succ Nat | Zero</span></span>
<span class="line"><span style="color:#C792EA;">const</span><span style="color:#A6ACCD;"> Nat </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">Data</span><span style="color:#A6ACCD;">(</span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">Succ m</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">Zero</span><span style="color:#89DDFF;">&#39;</span><span style="color:#A6ACCD;">)</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#A6ACCD;">Object</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">assign</span><span style="color:#A6ACCD;">(global</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> Nat</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">binder)</span><span style="color:#89DDFF;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#676E95;font-style:italic;">// instance Show Nat</span></span>
<span class="line"><span style="color:#A6ACCD;">Nat</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">bindShow</span><span style="color:#A6ACCD;">(</span><span style="color:#82AAFF;">match</span><span style="color:#A6ACCD;">(</span></span>
<span class="line"><span style="color:#A6ACCD;">    [Zero</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">is</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">0</span><span style="color:#A6ACCD;">]</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#A6ACCD;">    [Succ</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">is</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">({</span><span style="color:#A6ACCD;"> </span><span style="color:#A6ACCD;font-style:italic;">m</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">})</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">=&gt;</span><span style="color:#A6ACCD;"> m</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">show</span><span style="color:#A6ACCD;">() </span><span style="color:#89DDFF;">+</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">1</span><span style="color:#A6ACCD;">]</span></span>
<span class="line"><span style="color:#A6ACCD;">))</span><span style="color:#89DDFF;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#676E95;font-style:italic;">// add :: Nat -&gt; Nat -&gt; Nat</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">// add n Zero = n</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">// add n (Succ m) = Succ (add n m)</span></span>
<span class="line"><span style="color:#C792EA;">const</span><span style="color:#A6ACCD;"> add </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">match</span><span style="color:#A6ACCD;">(</span></span>
<span class="line"><span style="color:#A6ACCD;">	[[_</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">eqData</span><span style="color:#A6ACCD;">(Zero)]</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;font-style:italic;">n</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#A6ACCD;font-style:italic;">_</span><span style="color:#89DDFF;">)</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">=&gt;</span><span style="color:#A6ACCD;"> n]</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#A6ACCD;">	[[_</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">eqData</span><span style="color:#A6ACCD;">(</span><span style="color:#82AAFF;">Succ</span><span style="color:#A6ACCD;">(_))]</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;font-style:italic;">n</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span><span style="color:#A6ACCD;"> </span><span style="color:#A6ACCD;font-style:italic;">m</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">})</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">=&gt;</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">Succ</span><span style="color:#A6ACCD;">(</span><span style="color:#82AAFF;">add</span><span style="color:#A6ACCD;">(n</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> m))]</span></span>
<span class="line"><span style="color:#A6ACCD;">)</span><span style="color:#89DDFF;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#82AAFF;">add</span><span style="color:#A6ACCD;">(</span><span style="color:#82AAFF;">Succ</span><span style="color:#A6ACCD;">(</span><span style="color:#82AAFF;">Succ</span><span style="color:#A6ACCD;">(Zero))</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">Succ</span><span style="color:#A6ACCD;">(Zero))</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">show</span><span style="color:#A6ACCD;">()</span><span style="color:#89DDFF;">;</span><span style="color:#A6ACCD;"> </span><span style="color:#676E95;font-style:italic;">//3</span></span></code></pre></div>`,19),o=[p];function e(c,r,A,y,C,D){return a(),n("div",null,o)}const d=s(t,[["render",e]]);export{i as __pageData,d as default};
